/* 
 *  Helperbit: a p2p donation platform (frontend)
 *  Copyright (C) 2016-2021  Davide Gessa (gessadavide@gmail.com)
 *  Copyright (C) 2016-2021  Helperbit team
 *  
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *  
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *  
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <https://www.gnu.org/licenses/>
 */

(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var envConfig = {
  "production": true,
  "apiUrl": "https://api.helperbit.com/api/v1",
  "baseUrl": "https://app.helperbit.com",
  "explorer": {
    "tx": "https://blockstream.info/tx/"
  },
  "userTypes": [// { code: 'singleuser', name: 'Single users', basedistribution: 15 },
  // { code: 'school', name: 'Schools', basedistribution: 10 },
  // { code: 'company', name: 'Company', basedistribution: 10 },
  // { code: 'npo', name: 'NPOs', basedistribution: 10 },
  // { code: 'park', name: 'Parks', basedistribution: 10 },
  // { code: 'munic', name: 'Municipalities', basedistribution: 10 },
  // { code: 'cultural', name: 'Cultural', basedistribution: 10 },
  // { code: 'hospital', name: 'Hospitals', basedistribution: 10 },
  // { code: 'civilprotection', name: 'Civil protection', basedistribution: 10 },
  // { code: 'helperbit', name: 'Helperbit', basedistribution: 5 }
  {
    code: 'projects',
    name: 'Projects',
    basedistribution: 15
  }, {
    code: 'hospital',
    name: 'Hospitals',
    basedistribution: 10
  }, {
    code: 'civilprotection',
    name: 'Civil protection',
    basedistribution: 10
  }, {
    code: 'npo',
    name: 'NPOs',
    basedistribution: 10
  }, {
    code: 'school',
    name: 'Schools',
    basedistribution: 10
  }, {
    code: 'cultural',
    name: 'Cultural',
    basedistribution: 10
  }, {
    code: 'company',
    name: 'Company',
    basedistribution: 10
  }, {
    code: 'munic',
    name: 'Municipalities',
    basedistribution: 10
  }, {
    code: 'park',
    name: 'Parks',
    basedistribution: 5
  }, {
    code: 'singleuser',
    name: 'Single users',
    basedistribution: 5
  }, {
    code: 'helperbit',
    name: 'Helperbit',
    basedistribution: 5
  }],
  "minDonation": 0.001,
  "features": {
    "captcha": true,
    "chat": false,
    "faucet": false,
    "insurance": false,
    "conversion": false,
    "alert": false,
    "removewallet": false,
    "donationcomment": true
  },
  "mistralpay": {
    "account": "596KCYY4363M",
    "button": "596KCYY4363M150PAY503FX",
    "paymenturi": "https://secure.mistralpay.com/web_payment/"
  },
  "network": "mainnet"
};
module.exports = envConfig;

},{}],2:[function(require,module,exports){
"use strict";

var envConfig = require('../../config');

var helperbit_uri = '';
var helperbit_id_mod = '';

var helperbit_init = function helperbit_init(type, id, desc, conf, amount, manual, distribution, campaign) {
  helperbit_uri = envConfig.baseUrl + '/widgets/donate-button/iframe.html?t=' + type + '&i=' + id;
  if (desc !== undefined && desc !== null) helperbit_uri += '&d=' + desc;
  if (conf !== undefined) helperbit_uri += '&c=' + conf;
  if (amount) helperbit_uri += '&am=' + amount;
  if (campaign) helperbit_uri += '&camp=' + campaign;

  if (distribution) {
    helperbit_uri += '&dis=' + encodeURIComponent(JSON.stringify(distribution));
  }

  helperbit_uri += '&h=' + location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : '');
  helperbit_uri += '&p=' + location.pathname;
  if (!manual) helperbit_id_mod = '-' + type + '-' + id;
};

var helperbit_bind_event = function helperbit_bind_event(to, event, eventfallback, f) {
  if (to.addEventListener) {
    to.addEventListener(event, function () {
      f();
    });
  } else if (to.attachEvent) {
    to.attachEvent(eventfallback, function () {
      f();
    });
  }
};

var helperbit_widget_close = function helperbit_widget_close() {
  var frame = document.getElementById('hbdonateframe' + helperbit_id_mod);
  var container = document.getElementById('hbcontainer' + helperbit_id_mod);
  frame.setAttribute('src', '');
  frame.style.display = 'none'; // container.style.display = 'none';

  container.className = 'hbcontainer';
};

var helperbit_receive_message = function helperbit_receive_message(msg) {
  if (msg.origin !== envConfig.baseUrl) return;

  if (msg.data == 'close') {
    helperbit_widget_close();
  }
};

var helperbit_widget_activate = function helperbit_widget_activate() {
  var frame = document.getElementById('hbdonateframe' + helperbit_id_mod);
  var container = document.getElementById('hbcontainer' + helperbit_id_mod);
  container.onclick = helperbit_widget_close;
  frame.setAttribute('src', helperbit_uri);
  frame.style.display = 'block';
  container.className = 'hbcontainer active';
  window.addEventListener("message", helperbit_receive_message, false);
};

var helperbit_setup_buttons = function helperbit_setup_buttons() {
  var bopen = document.getElementById('hbdonatebutton' + helperbit_id_mod);

  if (bopen) {
    helperbit_bind_event(bopen, 'click', 'onclick', helperbit_widget_activate);
  }

  window.addEventListener("message", helperbit_receive_message, false);
};

if (document.addEventListener) {
  document.addEventListener("DOMContentLoaded", function () {
    window.helperbit_setup_buttons();
    document.removeEventListener("DOMContentLoaded", arguments.callee, false);
    x;
  });
} else if (document.attachEvent) {
  document.attachEvent("onreadystatechange", function () {
    if (document.readyState === "complete") {
      window.helperbit_setup_buttons();
      document.detachEvent("onreadystatechange", arguments.callee);
    }
  });
}

window.HBDonateButton = {
  init: helperbit_init,
  activate: helperbit_widget_activate
};
window.helperbit_init = helperbit_init;
window.helperbit_widget_activate = helperbit_widget_activate;
window.helperbit_widget_close = helperbit_widget_close;
window.helperbit_setup_buttons = helperbit_setup_buttons;

},{"../../config":1}]},{},[2])

//# sourceMappingURL=button.min.js.map
